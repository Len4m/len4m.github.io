import type { Translations } from './types';

export const translations: Record<string, Translations> = {
  en: {
    title: "MCP Creator",
    label: "Paste your text here:",
    placeholder: "Paste the content you want to process...",
    buttonText: "Create MCP",
    processingText: "Processing...",
    instructions: "Instructions:",
    step1: "Paste the binary help text (e.g., 'ls --help' output)",
    step2: "Configure MCP server parameters",
    step3: "Choose programming language (Node.js or Python)",
    step4: "Generate and download your MCP",
    characters: "Characters:",
    successMessage: "MCP created successfully!",
    errorMessage: "Error creating MCP",
    binaryHelpLabel: "Binary Help Text (Optional):",
    binaryHelpPlaceholder: "Paste the output of 'command --help' here to auto-detect parameters...",
    languageLabel: "Programming Language:",
    nodejs: "Node.js",
    python: "Python",
    serverConfigLabel: "Server Configuration:",
    serverNameLabel: "Server Name:",
    serverNamePlaceholder: "e.g., ls-server, chmod-server",
    serverDescriptionLabel: "Description:",
    serverDescriptionPlaceholder: "What this command does (e.g., 'Execute ls to list directory contents')",
    serverVersionLabel: "Version:",
    serverVersionPlaceholder: "e.g., 1.0.0",
    binaryNameLabel: "Binary or Script Name:",
    binaryNamePlaceholder: "e.g., ls, chmod, tool.sh, script.py",
    parseButtonText: "Auto-detect Parameters",
    parsingText: "Parsing...",
    generateButtonText: "Generate MCP",
    generatingText: "Generating...",
    downloadButtonText: "Download MCP",
    parsedParametersLabel: "Parsed Parameters:",
    noParametersFound: "No parameters added yet. Add them manually or use auto-detection.",
    copyToClipboard: "Copy to Clipboard",
    copiedToClipboard: "Copied!",
    filterAll: "All",
    filterFlags: "Flags",
    filterOptions: "Options",
    filterArguments: "Arguments",
    takesValue: "Takes value",
    noParametersOfType: "No parameters of this type found",
    installationTitle: "Installation & Usage Instructions:",
    prerequisitesTitle: "Prerequisites:",
    prerequisites1: "Node.js 18+ or Python 3.8+",
    prerequisites2: "MCP dependencies installed globally: <code>npm install -g @modelcontextprotocol/sdk</code> (Node.js) or <code>pip install mcp</code> (Python)",
    installationStepsTitle: "Installation Steps:",
    installationStep1: "Download the generated file",
    installationStep2: "Install necessary dependencies",
    installationStep3: "Configure MCP server in your LLM client",
    usingWithLLMsTitle: "Using with LLMs:",
    claudeDesktop: "Claude Desktop:",
    otherLLMs: "Other LLMs:",
    testing: "Testing:",
    claudeDesktopLink: "https://modelcontextprotocol.io/quickstart/user",
    otherLLMsLink: "https://modelcontextprotocol.io/docs/mcp",
    testingText: "Execute the generated MCP server with Node.js or Python to verify it works correctly",
    securityNotesTitle: "Security Notes:",
    securityNote1: "Always review generated code before execution",
    securityNote2: "Do not execute commands from untrusted users",
    securityNote3: "Consider using containers for isolation",
    editParametersTitle: "Edit Parameters:",
    editParameterLabel: "Edit Parameter",
    parameterNameLabel: "Name:",
    parameterDescriptionLabel: "Description:",
    parameterTypeLabel: "Type:",
    parameterRequiredLabel: "Required:",
    parameterTakesValueLabel: "Takes value:",
    parameterExpectsValueLabel: "Expects value:",
    saveChangesLabel: "Save Changes",
    cancelLabel: "Cancel",
    yes: "Yes",
    no: "No",
    flag: "Flag",
    option: "Option",
    argument: "Argument",
    flagDescription: "Flag without value (e.g., --help)",
    optionDescription: "Option with value (e.g., --file=name)",
    argumentDescription: "Positional argument",
    flagHelp: "Flags are boolean options without values",
    optionHelp: "Options require a specific value",
    argumentHelp: "Arguments are positional values",
    generateMCPHelp: "Generate MCP server with current configuration",
    addParameterLabel: "Add",
    deleteParameterLabel: "Delete",
    addNewParameterLabel: "Add New Parameter",
    newParameterLabel: "New Parameter",
    newParameterPlaceholder: "Parameter name",
    newParameterDescriptionLabel: "Description:",
    newParameterDescriptionPlaceholder: "Parameter description",
    analyzedParametersLabel: "Analyzed Parameters",
    mcpDescription: "MCP (Model Context Protocol) is a protocol that allows LLMs to connect with external tools, data sources, and systems.",
    mcpOfficialDocs: "Official MCP documentation",
    mcpOfficialDocsLink: "https://modelcontextprotocol.io/docs/mcp",
    claudeDesktopText: "Configure Claude Desktop to use your MCP server",
    otherLLMsText: "Configure other MCP-compatible LLMs",
    ollamaText: "Configure Ollama to use your MCP server",
    ollamaLink: "https://ollama.ai",
    configureMCPText: "Configure your MCP client to use the generated server",
    chatgptText: "Configure ChatGPT to use your MCP server",
    chatgptLink: "https://help.openai.com/en/articles/11487775-connectors-in-chatgpt#h_d2a53d4230",
    chatgptHelpText: "ChatGPT requires additional configuration for MCP",
    editCodeLabel: "Edit Code",
    generatedCodeLabel: "MCP Server Generated",
    securityConfigLabel: "Security Configuration",
    enableSecurityLabel: "Enable Security",
    securityLevelLabel: "Security Level",
    securityLevelBasic: "Basic",
    securityLevelIntermediate: "Intermediate",
    securityLevelAdvanced: "Advanced",
    restrictionsLabel: "Restrictions",
    allowedHostsLabel: "Allowed Hosts",
    allowedHostsPlaceholder: "localhost, 127.0.0.1",
    forbiddenPatternsLabel: "Forbidden Patterns",
    forbiddenPatternsPlaceholder: "rm -rf, DROP, DELETE",
    maxExecutionTimeLabel: "Max Execution Time (seconds)",
    allowedUsersLabel: "Allowed Users",
    allowedUsersPlaceholder: "user1, user2",
    maxMemoryLabel: "Max Memory (MB)",
    sandboxingLabel: "Sandboxing",
    useContainerLabel: "Use Container",
    networkIsolationLabel: "Network Isolation",
    filesystemRestrictionsLabel: "Filesystem Restrictions",
    filesystemRestrictionsPlaceholder: "/tmp, /var/tmp",
    runAsUserLabel: "Run As User",
    runAsUserPlaceholder: "nobody",
    validationLabel: "Validation",
    enableInputSanitizationLabel: "Enable Input Sanitization",
    enableOutputFilteringLabel: "Enable Output Filtering",
    enableCommandWhitelistLabel: "Enable Command Whitelist",
    parameterSecurityLabel: "Parameter Security",
    addParameterSecurityLabel: "Add Parameter Validation",
    securityHelpText: "Security features help protect your system from malicious or unintended command execution.",
    validationErrors: "Validation errors:",
    binaryNameHelp: "Letters, numbers, dots, hyphens and underscores. Must start with a letter. Supports binaries and scripts (e.g., tool.sh, script.py).",
    serverNameHelp: "Letters, numbers, dots, hyphens and underscores. Must start with a letter.",
    versionHelp: "Format: x.y.z (ex: 1.0.0)",
    descriptionHelp: "Maximum 200 characters",
    securityTitle: "Security Configuration:",
    securityBasicHelp: "Basic security includes input validation and execution limits.",
    securityIntermediateHelp: "Intermediate security adds user restrictions and command filtering.",
    securityAdvancedHelp: "Advanced security includes container isolation and comprehensive sandboxing.",
    securityEnabledBinary: "⚠️ Security enabled: System commands blocked",
    securityEnabledServer: "⚠️ Security enabled: Reserved words blocked",
    securityDisabledBinary: "ℹ️ Security disabled: All commands allowed",
    securityDisabledServer: "ℹ️ Security disabled: All names allowed",
    workingDirectoryLabel: "Working Directory:",
    workingDirectoryPlaceholder: "e.g., /home/user/projects, ./scripts",
    workingDirectoryHelp: "Directory where commands will be executed (optional, uses current directory if empty)",
    parameterNamePlaceholderFlag: "--flagname or -f",
    parameterNamePlaceholderOption: "--optionname or -o",
    parameterNamePlaceholderArgument: "ARGUMENT_NAME"
  },
  es: {
    title: "Creador de MCP",
    label: "Pega tu texto aquí:",
    placeholder: "Pega el contenido que quieres procesar...",
    buttonText: "Crear MCP",
    processingText: "Procesando...",
    instructions: "Instrucciones:",
    step1: "Pega el texto de ayuda del binario (ej: salida de 'ls --help')",
    step2: "Configura los parámetros del servidor MCP",
    step3: "Elige el lenguaje de programación (Node.js o Python)",
    step4: "Genera y descarga tu MCP",
    characters: "Caracteres:",
    successMessage: "¡MCP creado exitosamente!",
    errorMessage: "Error al crear MCP",
    binaryHelpLabel: "Texto de Ayuda del Binario (Opcional):",
    binaryHelpPlaceholder: "Pega aquí la salida de 'comando --help' para detectar parámetros automáticamente...",
    languageLabel: "Lenguaje de Programación:",
    nodejs: "Node.js",
    python: "Python",
    serverConfigLabel: "Configuración del Servidor:",
    serverNameLabel: "Nombre del Servidor:",
    serverNamePlaceholder: "ej: ls-server, chmod-server",
    serverDescriptionLabel: "Descripción:",
    serverDescriptionPlaceholder: "Qué hace este comando (ej: 'Ejecuta ls para listar directorios')",
    serverVersionLabel: "Versión:",
    serverVersionPlaceholder: "ej: 1.0.0",
    binaryNameLabel: "Nombre del Binario o Script:",
    binaryNamePlaceholder: "e.g., ls, chmod, tool.sh, script.py",
    parseButtonText: "Detectar Parámetros Automáticamente",
    parsingText: "Analizando...",
    generateButtonText: "Generar MCP",
    generatingText: "Generando...",
    downloadButtonText: "Descargar MCP",
    parsedParametersLabel: "Parámetros Analizados:",
    noParametersFound: "Aún no se han añadido parámetros. Añádelos manualmente o usa la detección automática.",
    copyToClipboard: "Copiar al Portapapeles",
    copiedToClipboard: "¡Copiado!",
    filterAll: "Todos",
    filterFlags: "Banderas",
    filterOptions: "Opciones",
    filterArguments: "Argumentos",
    takesValue: "Toma valor",
    noParametersOfType: "No se encontraron parámetros de este tipo",
    installationTitle: "Instalación & Instrucciones de Uso:",
    prerequisitesTitle: "Requisitos:",
    prerequisites1: "Node.js 18+ o Python 3.8+",
    prerequisites2: "Dependencias MCP instaladas globalmente: <code>npm install -g @modelcontextprotocol/sdk</code> (Node.js) o <code>pip install mcp</code> (Python)",
    installationStepsTitle: "Pasos de Instalación:",
    installationStep1: "Descarga el archivo generado",
    installationStep2: "Instala las dependencias necesarias",
    installationStep3: "Configura el servidor MCP en tu cliente LLM",
    usingWithLLMsTitle: "Uso con LLMs:",
    claudeDesktop: "Claude Desktop:",
    otherLLMs: "Otros LLMs:",
    testing: "Pruebas:",
    claudeDesktopLink: "https://modelcontextprotocol.io/quickstart/user",
    otherLLMsLink: "https://modelcontextprotocol.io/docs/mcp",
    testingText: "Ejecuta el servidor MCP generado con Node.js o Python para verificar que funciona correctamente",
    securityNotesTitle: "Notas de Seguridad:",
    securityNote1: "Revisa siempre el código generado antes de ejecutarlo",
    securityNote2: "No ejecutes comandos de usuarios no confiables",
    securityNote3: "Considera usar contenedores para aislamiento",
    editParametersTitle: "Editar Parámetros:",
    editParameterLabel: "Editar Parámetro",
    parameterNameLabel: "Nombre:",
    parameterDescriptionLabel: "Descripción:",
    parameterTypeLabel: "Tipo:",
    parameterRequiredLabel: "Requerido:",
    parameterTakesValueLabel: "Toma valor:",
    parameterExpectsValueLabel: "Espera valor:",
    saveChangesLabel: "Guardar Cambios",
    cancelLabel: "Cancelar",
    yes: "Sí",
    no: "No",
    flag: "Bandera",
    option: "Opción",
    argument: "Argumento",
    flagDescription: "Bandera sin valor (ej: --help)",
    optionDescription: "Opción con valor (ej: --file=name)",
    argumentDescription: "Argumento posicional",
    flagHelp: "Banderas son opciones booleanas sin valor",
    optionHelp: "Opciones requieren un valor específico",
    argumentHelp: "Arguments son valores posicionales",
    generateMCPHelp: "Genera el servidor MCP con la configuración actual",
    addParameterLabel: "Añadir",
    deleteParameterLabel: "Eliminar",
    addNewParameterLabel: "Añadir Nuevo Parámetro",
    newParameterLabel: "Nuevo Parámetro",
    newParameterPlaceholder: "Nombre del parámetro",
    newParameterDescriptionLabel: "Descripción:",
    newParameterDescriptionPlaceholder: "Descripción del parámetro",
    analyzedParametersLabel: "Parámetros Analizados",
    mcpDescription: "MCP (Model Context Protocol) es un protocolo que permite a los LLMs conectarse con herramientas externas, fuentes de datos y sistemas.",
    mcpOfficialDocs: "Documentación oficial de MCP",
    mcpOfficialDocsLink: "https://modelcontextprotocol.io/docs/mcp",
    claudeDesktopText: "Configura Claude Desktop para usar tu servidor MCP",
    otherLLMsText: "Configura otros LLMs compatibles con MCP",
    ollamaText: "Configura Ollama para usar tu servidor MCP",
    ollamaLink: "https://ollama.ai",
    configureMCPText: "Configura tu cliente MCP para usar el servidor generado",
    chatgptText: "Configura ChatGPT para usar tu servidor MCP",
    chatgptLink: "https://help.openai.com/en/articles/11487775-connectors-in-chatgpt#h_d2a53d4230",
    chatgptHelpText: "ChatGPT requiere configuración adicional para MCP",
    editCodeLabel: "Editar Código",
    generatedCodeLabel: "MCP Server Generated",
    securityConfigLabel: "Configuración de Seguridad",
    enableSecurityLabel: "Habilitar Seguridad",
    securityLevelLabel: "Nivel de Seguridad",
    securityLevelBasic: "Básico",
    securityLevelIntermediate: "Intermedio",
    securityLevelAdvanced: "Avanzado",
    restrictionsLabel: "Restricciones",
    allowedHostsLabel: "Hosts Permitidos",
    allowedHostsPlaceholder: "localhost, 127.0.0.1",
    forbiddenPatternsLabel: "Patrones Prohibidos",
    forbiddenPatternsPlaceholder: "rm -rf, DROP, DELETE",
    maxExecutionTimeLabel: "Tiempo Máximo de Ejecución (segundos)",
    allowedUsersLabel: "Usuarios Permitidos",
    allowedUsersPlaceholder: "usuario1, usuario2",
    maxMemoryLabel: "Memoria Máxima (MB)",
    sandboxingLabel: "Sandboxing",
    useContainerLabel: "Usar Contenedor",
    networkIsolationLabel: "Aislamiento de Red",
    filesystemRestrictionsLabel: "Restricciones de Sistema de Archivos",
    filesystemRestrictionsPlaceholder: "/tmp, /var/tmp",
    runAsUserLabel: "Ejecutar Como Usuario",
    runAsUserPlaceholder: "nobody",
    validationLabel: "Validación",
    enableInputSanitizationLabel: "Habilitar Sanitización de Entrada",
    enableOutputFilteringLabel: "Habilitar Filtrado de Salida",
    enableCommandWhitelistLabel: "Habilitar Lista Blanca de Comandos",
    parameterSecurityLabel: "Seguridad de Parámetros",
    addParameterSecurityLabel: "Añadir Validación de Parámetro",
    securityHelpText: "Las características de seguridad ayudan a proteger tu sistema de ejecución maliciosa o no intencionada de comandos.",
    validationErrors: "Errores de validación:",
    binaryNameHelp: "Letras, números, puntos, guiones y guiones bajos. Debe empezar con letra. Soporta binarios y scripts (ej: tool.sh, script.py).",
    serverNameHelp: "Letras, números, puntos, guiones y guiones bajos. Debe empezar con letra.",
    versionHelp: "Format: x.y.z (ex: 1.0.0)",
    descriptionHelp: "Máximo 200 caracteres",
    securityTitle: "Configuración de Seguridad:",
    securityBasicHelp: "La seguridad básica incluye validación de entrada y límites de ejecución.",
    securityIntermediateHelp: "La seguridad intermedia añade restricciones de usuario y filtrado de comandos.",
    securityAdvancedHelp: "La seguridad avanzada incluye aislamiento de contenedor y sandboxing integral.",
    securityEnabledBinary: "⚠️ Seguridad habilitada: Comandos del sistema bloqueados",
    securityEnabledServer: "⚠️ Seguridad habilitada: Palabras reservadas bloqueadas",
    securityDisabledBinary: "ℹ️ Seguridad deshabilitada: Todos los comandos permitidos",
    securityDisabledServer: "ℹ️ Seguridad deshabilitada: Todos los nombres permitidos",
    workingDirectoryLabel: "Directorio de Trabajo:",
    workingDirectoryPlaceholder: "ej: /home/usuario/proyectos, ./scripts",
    workingDirectoryHelp: "Directorio donde se ejecutarán los comandos (opcional, usa el directorio actual si está vacío)",
    parameterNamePlaceholderFlag: "--nombrebandera o -n",
    parameterNamePlaceholderOption: "--nombreopcion o -n",
    parameterNamePlaceholderArgument: "NOMBRE_ARGUMENTO"
  },
  ca: {
    title: "Creador de MCP",
    label: "Enganxa el teu text aquí:",
    placeholder: "Enganxa el contingut que vols processar...",
    buttonText: "Crear MCP",
    processingText: "Processant...",
    instructions: "Instruccions:",
    step1: "Enganxa el text d'ajuda del binari (ex: sortida de 'ls --help')",
    step2: "Configura els paràmetres del servidor MCP",
    step3: "Tria el llenguatge de programació (Node.js o Python)",
    step4: "Genera i descarrega el teu MCP",
    characters: "Caràcters:",
    successMessage: "MCP creat amb èxit!",
    errorMessage: "Error en crear MCP",
    binaryHelpLabel: "Text d'Ajuda del Binari (Opcional):",
    binaryHelpPlaceholder: "Enganxa aquí la sortida de 'comandament --help' per detectar paràmetres automàticament...",
    languageLabel: "Llenguatge de Programació:",
    nodejs: "Node.js",
    python: "Python",
    serverConfigLabel: "Configuració del Servidor:",
    serverNameLabel: "Nom del Servidor:",
    serverNamePlaceholder: "ex: ls-server, chmod-server",
    serverDescriptionLabel: "Descripció:",
    serverDescriptionPlaceholder: "Què fa aquesta comanda (ex: 'Executa ls per llistar directoris')",
    serverVersionLabel: "Versió:",
    serverVersionPlaceholder: "ex: 1.0.0",
    binaryNameLabel: "Nom del Binari o Script:",
    binaryNamePlaceholder: "ex: ls, chmod, tool.sh, script.py",
    parseButtonText: "Detectar Paràmetres Automàticament",
    parsingText: "Analitzant...",
    generateButtonText: "Generar MCP",
    generatingText: "Generant...",
    downloadButtonText: "Descarregar MCP",
    parsedParametersLabel: "Paràmetres Analitzats:",
    noParametersFound: "Encara no s'han afegit paràmetres. Afegeix-los manualment o usa la detecció automàtica.",
    copyToClipboard: "Copiar al Porta-retalls",
    copiedToClipboard: "Copiat!",
    filterAll: "Tots",
    filterFlags: "Banderes",
    filterOptions: "Opcions",
    filterArguments: "Arguments",
    takesValue: "Toma valor",
    noParametersOfType: "No s'han trobat paràmetres d'aquest tipus",
    installationTitle: "Instal·lació & Instruccions d'Ús:",
    prerequisitesTitle: "Requisits:",
    prerequisites1: "Node.js 18+ o Python 3.8+",
    prerequisites2: "Dependències MCP instal·lades globalment: <code>npm install -g @modelcontextprotocol/sdk</code> (Node.js) o <code>pip install mcp</code> (Python)",
    installationStepsTitle: "Passos d'Instal·lació:",
    installationStep1: "Descarrega l'arxiu generat",
    installationStep2: "Instal·la les dependències necessàries",
    installationStep3: "Configura el servidor MCP en el teu client LLM",
    usingWithLLMsTitle: "Ús amb LLMs:",
    claudeDesktop: "Claude Desktop:",
    otherLLMs: "Altres LLMs:",
    testing: "Proves:",
    claudeDesktopLink: "https://modelcontextprotocol.io/quickstart/user",
    otherLLMsLink: "https://modelcontextprotocol.io/docs/mcp",
    testingText: "Executa el servidor MCP generat amb Node.js o Python per verificar que funciona correctament",
    securityNotesTitle: "Notes de Seguretat:",
    securityNote1: "Revisa sempre el codi generat abans d'executar-lo",
    securityNote2: "No executis comandaments d'usuaris no confiables",
    securityNote3: "Considera usar contenidors per aïllament",
    editParametersTitle: "Editar Paràmetres:",
    editParameterLabel: "Editar Paràmetre",
    parameterNameLabel: "Nom:",
    parameterDescriptionLabel: "Descripció:",
    parameterTypeLabel: "Tipus:",
    parameterRequiredLabel: "Requerit:",
    parameterTakesValueLabel: "Toma valor:",
    parameterExpectsValueLabel: "Espera valor:",
    saveChangesLabel: "Guardar Canvis",
    cancelLabel: "Cancel·lar",
    yes: "Sí",
    no: "No",
    flag: "Bandera",
    option: "Opció",
    argument: "Argument",
    flagDescription: "Bandera sense valor (ex: --help)",
    optionDescription: "Opció amb valor (ex: --file=nom)",
    argumentDescription: "Argument posicional",
    flagHelp: "Les banderes són opcions booleanes sense valors",
    optionHelp: "Les opcions requereixen un valor específic",
    argumentHelp: "Els arguments són valors posicionals",
    generateMCPHelp: "Genera el servidor MCP amb la configuració actual",
    addParameterLabel: "Afegir",
    deleteParameterLabel: "Eliminar",
    addNewParameterLabel: "Afegir Nou Paràmetre",
    newParameterLabel: "Nou Paràmetre",
    newParameterPlaceholder: "Nom del paràmetre",
    newParameterDescriptionLabel: "Descripció:",
    newParameterDescriptionPlaceholder: "Descripció del paràmetre",
    analyzedParametersLabel: "Paràmetres Analitzats",
    mcpDescription: "MCP (Model Context Protocol) és un protocol que permet als LLMs connectar-se amb eines externes, fonts de dades i sistemes.",
    mcpOfficialDocs: "Documentació oficial de MCP",
    mcpOfficialDocsLink: "https://modelcontextprotocol.io/docs/mcp",
    claudeDesktopText: "Configura Claude Desktop per usar el teu servidor MCP",
    otherLLMsText: "Configura altres LLMs compatibles amb MCP",
    ollamaText: "Configura Ollama per usar el teu servidor MCP",
    ollamaLink: "https://ollama.ai",
    configureMCPText: "Configura el teu client MCP per usar el servidor generat",
    chatgptText: "Configura ChatGPT per usar el teu servidor MCP",
    chatgptLink: "https://help.openai.com/en/articles/11487775-connectors-in-chatgpt#h_d2a53d4230",
    chatgptHelpText: "ChatGPT requereix configuració addicional per MCP",
    editCodeLabel: "Editar Codi",
    generatedCodeLabel: "MCP Server generat",
    securityConfigLabel: "Configuració de Seguretat",
    enableSecurityLabel: "Habilitar Seguretat",
    securityLevelLabel: "Nivell de Seguretat",
    securityLevelBasic: "Bàsic",
    securityLevelIntermediate: "Intermedi",
    securityLevelAdvanced: "Avançat",
    restrictionsLabel: "Restriccions",
    allowedHostsLabel: "Hosts Permesos",
    allowedHostsPlaceholder: "localhost, 127.0.0.1",
    forbiddenPatternsLabel: "Patrons Prohibits",
    forbiddenPatternsPlaceholder: "rm -rf, DROP, DELETE",
    maxExecutionTimeLabel: "Temps Màxim d'Execució (segons)",
    allowedUsersLabel: "Usuaris Permesos",
    allowedUsersPlaceholder: "usuari1, usuari2",
    maxMemoryLabel: "Memòria Màxima (MB)",
    sandboxingLabel: "Sandboxing",
    useContainerLabel: "Usar Contenidor",
    networkIsolationLabel: "Aïllament de Xarxa",
    filesystemRestrictionsLabel: "Restriccions de Sistema de Fitxers",
    filesystemRestrictionsPlaceholder: "/tmp, /var/tmp",
    runAsUserLabel: "Executar Com a Usuari",
    runAsUserPlaceholder: "nobody",
    validationLabel: "Validació",
    enableInputSanitizationLabel: "Habilitar Sanitització d'Entrada",
    enableOutputFilteringLabel: "Habilitar Filtrat de Sortida",
    enableCommandWhitelistLabel: "Habilitar Llista Blanca de Comandaments",
    parameterSecurityLabel: "Seguretat de Paràmetres",
    addParameterSecurityLabel: "Afegir Validació de Paràmetre",
    securityHelpText: "Les característiques de seguretat ajuden a protegir el teu sistema d'execució maliciosa o no intencionada de comandaments.",
    validationErrors: "Errors de validació:",
    binaryNameHelp: "Lletres, números, punts, guions i guions baixos. Ha de començar amb lletra. Suporta binaris i scripts (ex: tool.sh, script.py).",
    serverNameHelp: "Lletres, números, punts, guions i guions baixos. Ha de començar amb lletra.",
    versionHelp: "Format: x.y.z (ex: 1.0.0)",
    descriptionHelp: "Màxim 200 caràcters",
    securityTitle: "Configuració de Seguretat:",
    securityBasicHelp: "La seguretat bàsica inclou validació d'entrada i límits d'execució.",
    securityIntermediateHelp: "La seguretat intermèdia afegeix restriccions d'usuari i filtrat de comandaments.",
    securityAdvancedHelp: "La seguretat avançada inclou aïllament de contenidor i sandboxing integral.",
    securityEnabledBinary: "⚠️ Seguretat habilitada: Comandaments del sistema bloquejats",
    securityEnabledServer: "⚠️ Seguretat habilitada: Paraules reservades bloquejades",
    securityDisabledBinary: "ℹ️ Seguretat deshabilitada: Tots els comandaments permesos",
    securityDisabledServer: "ℹ️ Seguretat deshabilitada: Tots els noms permesos",
    workingDirectoryLabel: "Directori de Treball:",
    workingDirectoryPlaceholder: "ex: /home/usuari/projectes, ./scripts",
    workingDirectoryHelp: "Directori on s'executaran les comandes (opcional, usa el directori actual si està buit)",
    parameterNamePlaceholderFlag: "--nombandera o -n",
    parameterNamePlaceholderOption: "--nomopcio o -n",
    parameterNamePlaceholderArgument: "NOM_ARGUMENT"
  }
}; 